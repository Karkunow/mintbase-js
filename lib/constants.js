"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CLOUD_STORAGE_CONFIG = exports.STORE_CONTRACT_CALL_METHODS = exports.STORE_CONTRACT_VIEW_METHODS = exports.MARKET_ACCOUNT = exports.STORE_FACTORY_CONTRACT_NAME = exports.NEAR_LOCAL_STORAGE_KEY_SUFFIX = exports.DEFAULT_APP_NAME = exports.CLOUD_POST_METADATA_URI = exports.CLOUD_GET_FILE_METADATA_URI = exports.CLOUD_BASE_URI = exports.BASE_ARWEAVE_URI = exports.API_BASE_NEAR_TESTNET = exports.API_BASE_NEAR_MAINNET = exports.API_VERSION = void 0;
var API_VERSION = 1;
exports.API_VERSION = API_VERSION;
var API_BASE_NEAR_MAINNET = 'https://mintbase.hasura.app/v1/graphql';
exports.API_BASE_NEAR_MAINNET = API_BASE_NEAR_MAINNET;
var API_BASE_NEAR_TESTNET = 'https://mintbase.hasura.app/v1/graphql';
exports.API_BASE_NEAR_TESTNET = API_BASE_NEAR_TESTNET;
var BASE_ARWEAVE_URI = 'https://arweave.net';
exports.BASE_ARWEAVE_URI = BASE_ARWEAVE_URI;
var CLOUD_BASE_URI = 'https://us-central1-omni-base-1.cloudfunctions.net';
exports.CLOUD_BASE_URI = CLOUD_BASE_URI;

var CLOUD_GET_FILE_METADATA_URI = function CLOUD_GET_FILE_METADATA_URI(fileName) {
  return "".concat(CLOUD_BASE_URI, "/arweave/file/").concat(fileName);
};

exports.CLOUD_GET_FILE_METADATA_URI = CLOUD_GET_FILE_METADATA_URI;

var CLOUD_POST_METADATA_URI = function CLOUD_POST_METADATA_URI() {
  return "".concat(CLOUD_BASE_URI, "/arweave/metadata/");
};

exports.CLOUD_POST_METADATA_URI = CLOUD_POST_METADATA_URI;
var DEFAULT_APP_NAME = 'Mintbase.js';
exports.DEFAULT_APP_NAME = DEFAULT_APP_NAME;
var NEAR_LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key'; // TODO: pull this from somewhere else?

exports.NEAR_LOCAL_STORAGE_KEY_SUFFIX = NEAR_LOCAL_STORAGE_KEY_SUFFIX;
var STORE_FACTORY_CONTRACT_NAME = process && process.env && process.env.CONTRACT_NAME || undefined || 'mintbase13.testnet';
exports.STORE_FACTORY_CONTRACT_NAME = STORE_FACTORY_CONTRACT_NAME;
var MARKET_ACCOUNT = "0.".concat(STORE_FACTORY_CONTRACT_NAME);
exports.MARKET_ACCOUNT = MARKET_ACCOUNT;
var STORE_CONTRACT_VIEW_METHODS = ['check_access', // REMOVED ?
'get_token_owner', // REMOVED
'get_name', // REMOVED
'get_marketplace' //REMOVED
];
exports.STORE_CONTRACT_VIEW_METHODS = STORE_CONTRACT_VIEW_METHODS;
var STORE_CONTRACT_CALL_METHODS = ['mint_tokens', 'grant_access', // REMOVED
'revoke_access', // REMOVED
'transfer_from', // REMOVED
'batch_burn', 'batch_transfer', 'grant_minter', 'renounce_minter', // REMOVED
'set_icon_base64', 'transfer', // REMOVED
'set_base_uri', 'new', 'destroy', //REMOVED
'list_tokens', //REMOVED
'set_marketplace' //REMOVED
];
exports.STORE_CONTRACT_CALL_METHODS = STORE_CONTRACT_CALL_METHODS;
var CLOUD_STORAGE_CONFIG = {
  apiKey: process && process.env && process.env.FIREBASE_PUBLIC_API_KEY || "PIXA",
  authDomain: process && process.env && process.env.FIREBASE_AUTH_DOMAIN || "PIXA",
  databaseURL: process && process.env && process.env.FIREBASE_DATABASE_URL || "PIXA",
  projectId: process && process.env && process.env.FIREBASE_PROJECT_ID || "PIXA",
  storageBucket: process && process.env && process.env.FIRSTORE_BUCKET_URL || "PIXA"
};
exports.CLOUD_STORAGE_CONFIG = CLOUD_STORAGE_CONFIG;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdGFudHMudHMiXSwibmFtZXMiOlsiQVBJX1ZFUlNJT04iLCJBUElfQkFTRV9ORUFSX01BSU5ORVQiLCJBUElfQkFTRV9ORUFSX1RFU1RORVQiLCJCQVNFX0FSV0VBVkVfVVJJIiwiQ0xPVURfQkFTRV9VUkkiLCJDTE9VRF9HRVRfRklMRV9NRVRBREFUQV9VUkkiLCJmaWxlTmFtZSIsIkNMT1VEX1BPU1RfTUVUQURBVEFfVVJJIiwiREVGQVVMVF9BUFBfTkFNRSIsIk5FQVJfTE9DQUxfU1RPUkFHRV9LRVlfU1VGRklYIiwiU1RPUkVfRkFDVE9SWV9DT05UUkFDVF9OQU1FIiwiTUFSS0VUX0FDQ09VTlQiLCJTVE9SRV9DT05UUkFDVF9WSUVXX01FVEhPRFMiLCJTVE9SRV9DT05UUkFDVF9DQUxMX01FVEhPRFMiLCJDTE9VRF9TVE9SQUdFX0NPTkZJRyIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInByb2plY3RJZCIsInN0b3JhZ2VCdWNrZXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLFdBQVcsR0FBRyxDQUFwQjs7QUFDQSxJQUFNQyxxQkFBcUIsR0FBRyx3Q0FBOUI7O0FBQ0EsSUFBTUMscUJBQXFCLEdBQUcsd0NBQTlCOztBQUNBLElBQU1DLGdCQUFnQixHQUFHLHFCQUF6Qjs7QUFFQSxJQUFNQyxjQUFjLEdBQ3pCLG9EQURLOzs7QUFFQSxJQUFNQywyQkFBMkIsR0FBRyxTQUE5QkEsMkJBQThCLENBQUNDLFFBQUQ7QUFBQSxtQkFDdENGLGNBRHNDLDJCQUNQRSxRQURPO0FBQUEsQ0FBcEM7Ozs7QUFFQSxJQUFNQyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCO0FBQUEsbUJBQ2xDSCxjQURrQztBQUFBLENBQWhDOzs7QUFHQSxJQUFNSSxnQkFBZ0IsR0FBRyxhQUF6Qjs7QUFDQSxJQUFNQyw2QkFBNkIsR0FBRyxrQkFBdEMsQyxDQUVQOzs7QUFDTyxJQUFNQywyQkFBMkIsR0FDdEMsb0VBQTZCLG9CQUR4Qjs7QUFFQSxJQUFNQyxjQUFjLGVBQVFELDJCQUFSLENBQXBCOztBQUVBLElBQU1FLDJCQUEyQixHQUFHLENBQ3pDLGNBRHlDLEVBQ3pCO0FBQ2hCLGlCQUZ5QyxFQUV0QjtBQUNuQixVQUh5QyxFQUc3QjtBQUNaLGlCQUp5QyxDQUl0QjtBQUpzQixDQUFwQzs7QUFPQSxJQUFNQywyQkFBMkIsR0FBRyxDQUN6QyxhQUR5QyxFQUV6QyxjQUZ5QyxFQUV6QjtBQUNoQixlQUh5QyxFQUd4QjtBQUNqQixlQUp5QyxFQUl4QjtBQUNqQixZQUx5QyxFQU16QyxnQkFOeUMsRUFPekMsY0FQeUMsRUFRekMsaUJBUnlDLEVBUXRCO0FBQ25CLGlCQVR5QyxFQVV6QyxVQVZ5QyxFQVU3QjtBQUNaLGNBWHlDLEVBWXpDLEtBWnlDLEVBYXpDLFNBYnlDLEVBYTlCO0FBQ1gsYUFkeUMsRUFjMUI7QUFDZixpQkFmeUMsQ0FldEI7QUFmc0IsQ0FBcEM7O0FBa0JBLElBQU1DLG9CQUFvQixHQUFHO0FBQ2xDQyxFQUFBQSxNQUFNLHlFQUQ0QjtBQUVsQ0MsRUFBQUEsVUFBVSxzRUFGd0I7QUFHbENDLEVBQUFBLFdBQVcsdUVBSHVCO0FBSWxDQyxFQUFBQSxTQUFTLHFFQUp5QjtBQUtsQ0MsRUFBQUEsYUFBYTtBQUxxQixDQUE3QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBUElfVkVSU0lPTiA9IDFcbmV4cG9ydCBjb25zdCBBUElfQkFTRV9ORUFSX01BSU5ORVQgPSAnaHR0cHM6Ly9taW50YmFzZS5oYXN1cmEuYXBwL3YxL2dyYXBocWwnXG5leHBvcnQgY29uc3QgQVBJX0JBU0VfTkVBUl9URVNUTkVUID0gJ2h0dHBzOi8vbWludGJhc2UuaGFzdXJhLmFwcC92MS9ncmFwaHFsJ1xuZXhwb3J0IGNvbnN0IEJBU0VfQVJXRUFWRV9VUkkgPSAnaHR0cHM6Ly9hcndlYXZlLm5ldCdcblxuZXhwb3J0IGNvbnN0IENMT1VEX0JBU0VfVVJJID1cbiAgJ2h0dHBzOi8vdXMtY2VudHJhbDEtb21uaS1iYXNlLTEuY2xvdWRmdW5jdGlvbnMubmV0J1xuZXhwb3J0IGNvbnN0IENMT1VEX0dFVF9GSUxFX01FVEFEQVRBX1VSSSA9IChmaWxlTmFtZTogc3RyaW5nKTogc3RyaW5nID0+XG4gIGAke0NMT1VEX0JBU0VfVVJJfS9hcndlYXZlL2ZpbGUvJHtmaWxlTmFtZX1gXG5leHBvcnQgY29uc3QgQ0xPVURfUE9TVF9NRVRBREFUQV9VUkkgPSAoKTogc3RyaW5nID0+XG4gIGAke0NMT1VEX0JBU0VfVVJJfS9hcndlYXZlL21ldGFkYXRhL2BcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVBQX05BTUUgPSAnTWludGJhc2UuanMnXG5leHBvcnQgY29uc3QgTkVBUl9MT0NBTF9TVE9SQUdFX0tFWV9TVUZGSVggPSAnX3dhbGxldF9hdXRoX2tleSdcblxuLy8gVE9ETzogcHVsbCB0aGlzIGZyb20gc29tZXdoZXJlIGVsc2U/XG5leHBvcnQgY29uc3QgU1RPUkVfRkFDVE9SWV9DT05UUkFDVF9OQU1FID1cbiAgcHJvY2Vzcy5lbnYuQ09OVFJBQ1RfTkFNRSB8fCAnbWludGJhc2UxMy50ZXN0bmV0J1xuZXhwb3J0IGNvbnN0IE1BUktFVF9BQ0NPVU5UID0gYDAuJHtTVE9SRV9GQUNUT1JZX0NPTlRSQUNUX05BTUV9YFxuXG5leHBvcnQgY29uc3QgU1RPUkVfQ09OVFJBQ1RfVklFV19NRVRIT0RTID0gW1xuICAnY2hlY2tfYWNjZXNzJywgLy8gUkVNT1ZFRCA/XG4gICdnZXRfdG9rZW5fb3duZXInLCAvLyBSRU1PVkVEXG4gICdnZXRfbmFtZScsIC8vIFJFTU9WRURcbiAgJ2dldF9tYXJrZXRwbGFjZScsIC8vUkVNT1ZFRFxuXVxuXG5leHBvcnQgY29uc3QgU1RPUkVfQ09OVFJBQ1RfQ0FMTF9NRVRIT0RTID0gW1xuICAnbWludF90b2tlbnMnLFxuICAnZ3JhbnRfYWNjZXNzJywgLy8gUkVNT1ZFRFxuICAncmV2b2tlX2FjY2VzcycsIC8vIFJFTU9WRURcbiAgJ3RyYW5zZmVyX2Zyb20nLCAvLyBSRU1PVkVEXG4gICdiYXRjaF9idXJuJyxcbiAgJ2JhdGNoX3RyYW5zZmVyJyxcbiAgJ2dyYW50X21pbnRlcicsXG4gICdyZW5vdW5jZV9taW50ZXInLCAvLyBSRU1PVkVEXG4gICdzZXRfaWNvbl9iYXNlNjQnLFxuICAndHJhbnNmZXInLCAvLyBSRU1PVkVEXG4gICdzZXRfYmFzZV91cmknLFxuICAnbmV3JyxcbiAgJ2Rlc3Ryb3knLCAvL1JFTU9WRURcbiAgJ2xpc3RfdG9rZW5zJywgLy9SRU1PVkVEXG4gICdzZXRfbWFya2V0cGxhY2UnLCAvL1JFTU9WRURcbl1cblxuZXhwb3J0IGNvbnN0IENMT1VEX1NUT1JBR0VfQ09ORklHID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52LkZJUkVCQVNFX1BVQkxJQ19BUElfS0VZLFxuICBhdXRoRG9tYWluOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9BVVRIX0RPTUFJTixcbiAgZGF0YWJhc2VVUkw6IHByb2Nlc3MuZW52LkZJUkVCQVNFX0RBVEFCQVNFX1VSTCxcbiAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9QUk9KRUNUX0lELFxuICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5GSVJTVE9SRV9CVUNLRVRfVVJMLFxufVxuIl19